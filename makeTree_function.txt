for (int i = 0; i < this->row; i++)
        for (int j = 0; j < this->column; j++) {

            if (borders(i + 1, j)) { //down
                if (abs(matrix[i][j] - matrix[i + 1][j]) < mylinks[i][j].height) {
                    mylinks[i][j].linkx = i + 1;
                    mylinks[i][j].linky = j;
                    mylinks[i][j].height=abs(matrix[i][j] - matrix[i + 1][j]);
                }//update link
                //border if
            }
            if (borders(i - 1, j)) { //up
                if (abs(matrix[i][j] - matrix[i - 1][j]) < mylinks[i][j].height) {
                    mylinks[i][j].linkx = i - 1;
                    mylinks[i][j].linky = j;
                    mylinks[i][j].height=abs(matrix[i][j] - matrix[i - 1][j]);
                }//update link
                //border if
            }
            if (borders(i, j + 1)) { //right
                if (abs(matrix[i][j] - matrix[i ][j+ 1]) < mylinks[i][j].height) {
                   // *mylinks[i][j].pv=mylinks[i][j+1];
                    mylinks[i][j].linkx = i ;
                    mylinks[i][j].linky = j+ 1;
                    mylinks[i][j].height=abs(matrix[i][j] - matrix[i][j + 1]);
                }//update link
                //border if
            }
            if(borders(i,j-1)){ //left
                if(abs(matrix[i][j]-matrix[i][j-1])<mylinks[i][j].height){
                    mylinks[i][j].linkx=i;
                    mylinks[i][j].linky=j-1;
                    mylinks[i][j].height=abs(matrix[i][j] - matrix[i][j-1]);
                }//update link
                //border if
            }
        }